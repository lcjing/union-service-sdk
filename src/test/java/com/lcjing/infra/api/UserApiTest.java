/**
 * union-service
 * 一账通API接口
 *
 * OpenAPI spec version: v1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.lcjing.infra.api;

import com.google.gson.Gson;
import com.lcjing.infra.ApiException;
import com.lcjing.infra.model.*;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserApi
 */
public class UserApiTest {

    private final UserApi api = new UserApi();


    /**
     * 删除用户关系
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserAccountTest() throws ApiException {
        UserDeleteAccountRequest request = null;
        // BaseResult response = api.deleteUserAccount(request);

        // TODO: test validations
    }

    /**
     * 用户注册
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void registerTest() throws ApiException {
        UserRegisterRequest request = new UserRegisterRequest();
        UserDTO userDTO = new UserDTO();
        userDTO.setAccountId("123456abcdef");
        userDTO.setUserLoginId("mallqwert123");
        userDTO.setUserCellphone("1581287192");
        userDTO.setPlatformId(1);

        UserExtendDTO userExtendDTO = new UserExtendDTO();


        userExtendDTO.setUserNickname("测试Test");
        userExtendDTO.setUserGender("男");
        userExtendDTO.setUserAccountId(userDTO.getAccountId());


        request.setUserDTO(userDTO);
        request.setUserExtendDTO(userExtendDTO);
        BaseResult response = api.register(request);
        System.out.println(response);
    }

    /**
     * 根据手机号和平台Id查询是否存在用户
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selectUserTest() throws ApiException {
        String cellphone = "15812871932";
        Integer platformId = 1;
        BaseResult response = api.selectUser(cellphone, platformId);
        System.out.println(response);
        UserDTO userDTO = new Gson().fromJson(response.getData().toString(), UserDTO.class);
        System.out.println(userDTO);
    }

    /**
     * 查询用户扩展信息
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void selectUserExtendTest() throws ApiException {
        String accountId = "5eec2b1600ac2207a3a8bb13";
        Integer platformId = 1;
        BaseResult response = api.selectUserExtend(accountId, platformId);
        System.out.println(response);

    }

    /**
     * 更新用户信息
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTest() throws ApiException {
        UserUpdateRequest request = null;
        // BaseResult response = api.update(request);

        // TODO: test validations
    }

    /**
     * 更新用户扩展信息
     *
     *
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateExtendTest() throws ApiException {
        UserExtendDTO userExtendDTO = null;
        Integer platformId = null;
        // BaseResult response = api.updateExtend(userExtendDTO, platformId);

        // TODO: test validations
    }

}
